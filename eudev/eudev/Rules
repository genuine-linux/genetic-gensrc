#!/bin/bash

# Load Info file #
source ./Info;

# Fake GEN<DESTDIR> = <rootfs> to install package #
GENPKGDESTDIR="$(pwd)/rootfs";

# Change to source directory #
cd ../$original_name-$version;

# configure #
if test -f "configure"; then
	echo " --- Configure <$name ($version)> ---";
	DBUS_CFLAGS=' ' \
	DBUS_LIBS=' ' \
	./configure \
		--host="$GENUINE_HOST" \
		--target="$GENUINE_TGT" \
		--build="$GENUINE_TGT" \
		--prefix=/usr \
		--bindir=/sbin          \
            	--sbindir=/sbin         \
            	--libdir=/usr/lib       \
            	--sysconfdir=/etc       \
            	--libexecdir=/lib       \
		--localstatedir=/var \
		--docdir=/usr/share/doc/$name-$version \
            	--with-rootprefix=      \
            	--with-rootlibdir=/lib  \
	    	--with-rootrundir=/run \
            	--enable-manpages       \
            	--disable-static        \
		--enable-kmod \
            	--config-cache \
		--enable-split-usr \
		--enable-manpages \
		--disable-introspection \
		--disable-selinux \
		--enable-rule-generator
fi;

# make
if test -f "Makefile"; then
	echo " --- Make <$name ($version)> ---";
	make;
fi;

# Create install directory
mkdir -pv ${GENPKGDESTDIR};

# make install
if test -f "Makefile"; then
	echo " --- Make Install <$name ($version)> ---";
	make DESTDIR=${GENPKGDESTDIR} install;
	mkdir -pv $GENPKGDESTDIR/lib/udev/rules.d;
	mkdir -pv $GENPKGDESTDIR/etc/udev/rules.d;
	cp -av ../$name/files/* $GENPKGDESTDIR;
fi;

